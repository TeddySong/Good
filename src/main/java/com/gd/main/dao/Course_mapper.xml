<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.main.dao.CourseDAO">

	<!-- <select id="courList" resultType="com.gd.main.dto.CourseDTO">
		SELECT co_no, co_name, subject.sub_no, sub_name, co_startDate, co_endDate, 
		co_startTime, co_condition FROM course
		LEFT OUTER JOIN subject ON subject.sub_no = course.sub_no
		ORDER BY co_no DESC limit #{param1} offset #{param2}
	</select> -->
	
	<select id="courList2" resultType="com.gd.main.dto.CourseDTO">
		SELECT co_no, co_name, subject.sub_no, subject.sub_name, co_startDate, co_endDate, 
		co_startTime, co_condition FROM course
		LEFT OUTER JOIN subject ON subject.sub_no = course.sub_no
			<where>
				<if test="subNameSearch != null and subNameSearch !='' 
				and courseNameSearch != null and courseNameSearch !='' 
				and keyword != null and keyword !='' 
				and startSearch != null and startSearch !='' 
				and endSearch != null and endSearch !=''">
					<if test="subNameSearch.equals('sub_name')">
						subject.sub_name LIKE concat('%',#{subNameSearch},'%')
					</if>
					
					<if test="courseNameSearch.equals('co_name')">
						co_name LIKE concat('%',#{keyword},'%')
					</if>
					
					<if test="courseNameSearch.equals('co_condition')">
						co_condition LIKE concat('%',#{keyword},'%')
					</if>
					
					<if test="startSearch.equals('co_startDate') 
					and endSearch.equals('co_endDate')">
					<![CDATA[
						co_startDate >= #{startSearch} AND 
						co_endDate <= #{endSearch}
					 ]]>
					</if>
				</if>
				
				<if test="subNameSearch != null and subNameSearch !='' 
				and startSearch != null and startSearch !='' 
				and endSearch != null and endSearch !=''">
				<![CDATA[
					co_name ="test_course" and co_startDate >= '2022-01-01' and co_endDate <='2022-12-31'
				]]>
				</if>
			</where>
	</select>
	
	<select id="allCount" resultType="int">
		SELECT COUNT(co_no) FROM course
	</select>
	
	<select id="courDetail2" parameterType="String" resultType="com.gd.main.dto.CourseDTO">
		SELECT co_no, co_name, course.sub_no, sub_name, co_startDate, co_endDate, 
		co_startTime, co_endTime, co_condition,co_capacity FROM course
		LEFT JOIN subject ON subject.sub_no = course.sub_no
		WHERE co_no = #{co_no}
	</select>
	
	<select id="callSubNo" resultType="com.gd.main.dto.CourseDTO">
		SELECT sub_no FROM subject
		WHERE sub_no = #{param1}
	</select>
	
	
	<select id="courOverlay" parameterType="String" resultType="String">
		SELECT co_name FROM course WHERE co_name = #{chkCo}
	</select>
	
	<select id="subTable" resultType="com.gd.main.dto.CourseDTO">
		SELECT sub_no FROM subject
		WHERE sub_no = #{param1}
	</select>
	
	<insert id="courRegister" parameterType="hashmap">
		INSERT INTO course(co_name,co_startDate,co_endDate,co_startTime,co_endTime,co_capacity,co_condition,sub_no)
		VALUES(#{co_name},#{co_startDate},#{co_endDate},#{co_startTime},#{co_endTime},#{co_capacity},#{co_condition},#{sub_no})
	</insert>
	
	<update id="courseUpdate" parameterType="hashmap">
		UPDATE course SET
			co_name = #{co_name}
			,sub_no = #{sub_no}
			,co_startDate = #{co_startDate}
			,co_endDate = #{co_endDate}
			,co_startTime = #{co_startTime}
			,co_endTime = #{co_endTime}
			,co_condition = #{co_condition}
			,co_capacity = #{co_capacity}
		WHERE co_no = #{co_no}
	</update>
	
	<!-- 과목명 불러오기 -->
 	<select id="subName" resultType="com.gd.main.dto.CourseDTO">
		SELECT sub_name,sub_no FROM subject
	</select>
	
	<!-- 과정 정보 불러오기 -->
	<select id="courseName" resultType="com.gd.main.dto.CourseDTO">
		SELECT co_no,co_name,sub_no FROM course
	</select>

</mapper>