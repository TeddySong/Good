<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.main.dao.CourseDAO">

	<!-- <select id="courList" resultType="com.gd.main.dto.CourseDTO">
		SELECT co_no, co_name, subject.sub_no, sub_name, co_startDate, co_endDate, 
		co_startTime, co_condition FROM course
		LEFT OUTER JOIN subject ON subject.sub_no = course.sub_no
		ORDER BY co_no DESC limit #{param1} offset #{param2}
	</select> -->
	
	<select id="courList2" parameterType="hashmap" resultType="com.gd.main.dto.CourseDTO">
		SELECT co_no, co_name, subject.sub_no, subject.sub_name, co_startDate, co_endDate, 
		co_startTime, co_condition FROM course
		LEFT OUTER JOIN subject ON subject.sub_no = course.sub_no
		<where>
			<choose>
				<!-- subNameSearch : 과목명 / courseNameSearch : 과정명 or 과정 진행상황
				 startSearch : 개강일 / endSearch : 종강일 / keyword : 검색창-->
				
				<!-- 하나씩 선택 -->
				<when test="courseNameSearch.equals('과정명') or
				courseNameSearch.equals('과정 진행상황') or
				startSearch.equals('startSearch') or 
				endSearch.equals('endSearch') or
				subNameSearch.equals('subNameSearch')">
					co_name LIKE concat('%',#{keyword},'%') OR
					co_condition LIKE concat('%',#{keyword},'%') OR
					<![CDATA[
					co_startDate >= #{startSearch} OR
					co_endDate <= #{endSearch}
					]]>
				</when>
				
				<!-- 두개씩 선택 -->
				<when test="endSearch.equals('subNameSearch') and
				courseNameSearch.equals('과정명') or
				courseNameSearch.equals('과정 진행상황')">
					subject.sub_name = #{subNameSearch} AND
					co_name LIKE concat('%',#{keyword},'%') OR
					co_condition LIKE concat('%',#{keyword},'%')
				</when>
				<when test="startSearch.equals('startSearch') and 
				endSearch.equals('endSearch')">
					<![CDATA[
					co_startDate >= #{startSearch} AND
					co_endDate <= #{endSearch}
					]]>
				</when>
				<when test="courseNameSearch.equals('과정명') or
				courseNameSearch.equals('과정 진행상황') and
				startSearch.equals('startSearch') or 
				endSearch.equals('endSearch')">
					co_name LIKE concat('%',#{keyword},'%') OR
					co_condition LIKE concat('%',#{keyword},'%') AND
					<![CDATA[
					co_startDate >= #{startSearch} OR
					co_endDate <= #{endSearch}
					]]>
				</when>
				
				<!-- 세개씩 선택 -->
				<when test="endSearch.equals('subNameSearch') and
				courseNameSearch.equals('과정명') or
				courseNameSearch.equals('과정 진행상황') and
				startSearch.equals('startSearch')">
					subject.sub_name = #{subNameSearch} AND
					co_name LIKE concat('%',#{keyword},'%') OR
					co_condition LIKE concat('%',#{keyword},'%') AND
					<![CDATA[
					co_startDate >= #{startSearch}
					]]>
				</when>
				<when test="endSearch.equals('subNameSearch') and
				courseNameSearch.equals('과정명') or
				courseNameSearch.equals('과정 진행상황') and
				endSearch.equals('endSearch')">
					subject.sub_name = #{subNameSearch} AND
					co_name LIKE concat('%',#{keyword},'%') OR
					co_condition LIKE concat('%',#{keyword},'%') AND
					<![CDATA[
					co_endDate <= #{endSearch}
					]]>
				</when>
				<when test="courseNameSearch.equals('과정명') or
				courseNameSearch.equals('과정 진행상황') and
				startSearch.equals('startSearch') and 
				endSearch.equals('endSearch')">
					co_name LIKE concat('%',#{keyword},'%') OR
					co_condition LIKE concat('%',#{keyword},'%') AND
					<![CDATA[
					co_startDate >= #{startSearch} AND
					co_endDate <= #{endSearch}
					]]>
				</when>
				
				<!-- 전부 선택 -->
				<when test="courseNameSearch.equals('과정명') or
				courseNameSearch.equals('과정 진행상황') and
				startSearch.equals('startSearch') and 
				endSearch.equals('endSearch') and
				subNameSearch.equals('subNameSearch')">
					subject.sub_name = #{subNameSearch} AND
					co_name LIKE concat('%',#{keyword},'%') OR
					co_condition LIKE concat('%',#{keyword},'%') AND
					<![CDATA[
					co_startDate >= #{startSearch} AND
					co_endDate <= #{endSearch}
					]]>
				</when>
			</choose>
			
		</where>
		
			<!-- <trim prefix="(" suffix=") AND">
				<foreach collection="courList2" item="name">
					<choose>
						<when test="name == 'subNameSearch'.toString()">
							subject.sub_name = #{subNameSearch}
						</when>
						<when test="name == 'courseNameSearch'.toString()">
							co_name LIKE concat('%',#{keyword},'%')
						</when>
						<when test="name == 'courseNameSearch'.toString()">
							co_condition LIKE concat('%',#{keyword},'%')
						</when>
						<when test="name == 'startSearch'.toString()">
							co_startDate >= #{startSearch}
						</when>
						<when test="name == 'endSearch'.toString()">
							co_endDate <= #{endSearch}
						</when>
					</choose>
				</foreach>
			</trim> -->

		ORDER BY co_no DESC LIMIT #{cnt} OFFSET #{offset}
	</select>
	
	<select id="allCount" resultType="int">
		SELECT COUNT(co_no) FROM course
	</select>
	
	<select id="courDetail2" parameterType="String" resultType="com.gd.main.dto.CourseDTO">
		SELECT co_no, co_name, course.sub_no, sub_name, co_startDate, co_endDate, 
		co_startTime, co_endTime, co_condition,co_capacity FROM course
		LEFT JOIN subject ON subject.sub_no = course.sub_no
		WHERE co_no = #{co_no}
	</select>
	
	<select id="callSubNo" resultType="com.gd.main.dto.CourseDTO">
		SELECT sub_no FROM subject
		WHERE sub_no = #{param1}
	</select>
	
	
	<select id="courOverlay" parameterType="String" resultType="String">
		SELECT co_name FROM course WHERE co_name = #{chkCo}
	</select>
	
	<select id="subTable" resultType="com.gd.main.dto.CourseDTO">
		SELECT sub_no FROM subject
		WHERE sub_no = #{param1}
	</select>
	
	<insert id="courRegister" parameterType="hashmap">
		INSERT INTO course(co_name,co_startDate,co_endDate,co_startTime,co_endTime,co_capacity,co_condition,sub_no)
		VALUES(#{co_name},#{co_startDate},#{co_endDate},#{co_startTime},#{co_endTime},#{co_capacity},#{co_condition},#{sub_no})
	</insert>
	
	<update id="courseUpdate" parameterType="hashmap">
		UPDATE course SET
			co_name = #{co_name}
			,sub_no = #{sub_no}
			,co_startDate = #{co_startDate}
			,co_endDate = #{co_endDate}
			,co_startTime = #{co_startTime}
			,co_endTime = #{co_endTime}
			,co_condition = #{co_condition}
			,co_capacity = #{co_capacity}
		WHERE co_no = #{co_no}
	</update>
	
	<!-- 과목명 불러오기 -->
 	<select id="subName" resultType="com.gd.main.dto.CourseDTO">
		SELECT sub_name,sub_no FROM subject
	</select>
	
	<!-- 과정 정보 불러오기 -->
	<select id="courseName" resultType="com.gd.main.dto.CourseDTO">
		SELECT co_no,co_name,sub_no FROM course
	</select>

</mapper>